execute pathogen#infect()
filetype off
call vundle#begin()

" Let Vundle manage itself
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-airline/vim-airline'

" Plugins

call vundle#end()

set nocp
filetype plugin indent on

" Build C code tags of my own project with Ctrl+F12
map <C-F12> <esc>:!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q %:p:h<CR>
" ---------------------------------------------------------------------------
" OmnicppComplete settings - Begin
" OmnicppComplete
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_NamespaceSearch = 1
let OmniCPP_ShowAccess = 1
let OmniCpp_MayCompleteDot = 1
let OmniCpp_MayCompleteArrow = 1
let OmniCpp_MayCompleteScope = 1

" Automatically op and close the popup menu / preview window
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
set completeopt=menuone,menu,longest,preview
" OmnicppComplte settings - End
" ---------------------------------------------------------------------------

" ---------------------------------------------------------------------------
" Syntastic Configuration
"let g:syntastic_always_populate_loc_list = 1
"let g:syntastic_auto_loc_list = 1
"let g:syntastic_check_on_open = 1
"let g:syntastic_check_on_wq = 0
" ---------------------------------------------------------------------------

" ---------------------------------------------------------------------------
" airline configuration
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"
"let g:airline_powerline_fonts = 1
let g:airline#extensions#hunks#enabled  = 0
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

let g:airline_section_a = airline#section#create(['mode'])
"let g:airline_section_a = 'mode'
" let g:airline_section_b =
" let g:airline_section_x = airline#section#create(['%p%%'])
" let g:airline_section_y = airline#section#create(['%B'])
let g:airline_section_z = airline#section#create_right(['%p%%','%l/%L:%c'])
" ---------------------------------------------------------------------------

syntax on                       " syntax colour on
set encoding=utf-8              " use encoding: UTF-8
let c_no_curly_error = 1

set ruler                       " show line number on bar
set number                      " show line numbers
set autoindent smartindent      " turn on auto/smart indenting
set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab     " tab based on loaded file

if exists("&colorcolumn")
    set colorcolumn=80
endif

" ---------------------------------------------------------------------------
"  searching
set hlsearch                    " enable search highlight globally
set incsearch                   " show matches as soon as possible
set showmatch                   " show matching brackets when typing
" ---------------------------------------------------------------------------

set laststatus=2
set scrolloff=5                 " keep at least 5 lines above/below cursor
set autoread                    " watch for file changes by other programs
set backup                      " procude *~ back up files
set backupext=~                 " add ~ to back up file as a suffix

" ---------------------------------------------------------------------------
" tags
set tags=./tags,tags,../tags,../../tags,../../../tags,../../../../tags,/usr/include/tags
" ---------------------------------------------------------------------------

" to ensure that set spell check is off
if v:version >= 700
    set spelllang=en
    set nospell
endif

" Private Mappings
let maplocalleader=','
" ctrl + a to select all
map <C-a> <esc>ggVG<CR>
" auto complete {}
inoremap {<CR> {<CR>}<C-o>O

" buffer mapping
" move to next
map <LocalLeader>ls :ls<CR>
map <C-b> <esc>:bn<CR>
map <C-S-b> <esc>:bp<CR>
map <S-w> <esc>:bdelete %<CR>

