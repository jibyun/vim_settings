execute pathogen#infect()
filetype off
call vundle#begin()

" Plugins
" Let Vundle manage itself
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'ciaranm/inkpot'
Plugin 'scrooloose/nerdtree'
Plugin 'majutsushi/tagbar'
Plugin 'Valloric/YouCompleteMe'

call vundle#end()

set nocp
filetype plugin indent on

" ---------------------------------------------------------------------------   
" setup for the visual environment                                              
if has('gui_running')                                                           
        set bg=light                                                            
        set guioptions-=T                                                       
        set guioptions-=m                                                       
        set guioptions+=c                                                       
        "set guifont=Monospace\ 8,Terminal\ 8,fixed                             
        set guifont=ProggyCleanTT\ 12                                           
                                                                                
        let g:inkpot_black_background = 1                                       
        colorscheme inkpot              " 256 colour                         
                                                                                
else                                                                            
        if $TERM =~ '^xterm'                                                    
                set t_Co=256                                                    
        elseif $TERM =~ '^screen-bce'                                           
                set t_Co=256            " just guessing                         
        elseif $TERM =~ '^rxvt'                                                 
                set t_Co=88                                                     
        elseif $TERM =~ '^linux'                                                
                set t_Co=8                                                      
        else                                                                    
                set t_Co=16                                                     
        endif                                                                   
                                                                                
        set bg=dark                                                             
        "set bg=light                                                           
                                                                                
        "colorscheme desert              " 16 colour                            
        "colorscheme ps_color                                                   
        "colorscheme desert256           " 256 colour                           
        "colorscheme gardener            " 256 colour                           
        "colorscheme inkpot              " 256 colour                           
        "colorscheme blacklight          " 256 colour                           
                                                                                
        let g:inkpot_black_background = 1                                       
        colorscheme inkpot              " 256 colour                         
                                                                                
endif                                                               
" ---------------------------------------------------------------------------

syntax on                       " syntax colour on
let c_no_curly_error = 1

set ruler                       " show line number on bar
set number                      " show line numbers
set autoindent smartindent      " turn on auto/smart indenting
"set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab     " tab based on loaded file
set tabstop=8 softtabstop=0 smarttab

if exists("&colorcolumn")
    set colorcolumn=80
endif

" ---------------------------------------------------------------------------
" list chars
set list
set listchars=tab:->,trail:.
" ---------------------------------------------------------------------------


" ---------------------------------------------------------------------------
"  searching
set hlsearch                    " enable search highlight globally
set incsearch                   " show matches as soon as possible
set showmatch                   " show matching brackets when typing
" ---------------------------------------------------------------------------

set laststatus=2
set scrolloff=5                 " keep at least 5 lines above/below cursor
set autoread                    " watch for file changes by other programs
"set backup                      " procude *~ back up files
"set backupext=~                 " add ~ to back up file as a suffix

" ---------------------------------------------------------------------------
" tags
set tags=./tags,tags,../tags,../../tags,../../../tags,../../../../tags,/usr/include/tags
" ---------------------------------------------------------------------------

" ---------------------------------------------------------------------------
" ignore files with exts...
set wildignore+=*.d,*.so,*.a,*.o,*.DEP,*.swp,*zip
" ---------------------------------------------------------------------------

" to ensure that set spell check is off
if v:version >= 700
    set spelllang=en
    set nospell
endif

" Private Mappings
let maplocalleader=','
" ctrl + a to select all
map <C-a> <esc>ggVG<CR>
" auto complete {}
inoremap {<CR> {<CR>}<C-o>O

map <LocalLeader>ls :ls<CR>
map <LocalLeader>nerd :NERDTree<CR>
" enable indent 4 spaces == tab
map <LocalLeader>sw4 :set expandtab shiftwidth=4<CR> 
" diable indent 4 spaces == tab
map <LocalLeader>sw8 :set noexpandtab shiftwidth=8<CR>

" enable list
map <LocalLeader>l :set list<CR>
" diable list
map <LocalLeader>nl :set nolist<CR>


" Show func
map <LocalLeader>sf <Plug>ShowFunc

" buffer mapping
" move to next
map <C-b> <esc>:bn<CR>
map <S-b> <esc>:bp<CR>
map <S-w> <esc>:bdelete %<CR>


" Build C code tags of my own project with Ctrl+F12
map <C-F12> <esc>:!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q %:p:h<CR>

set encoding=utf-8              " use encoding: UTF-8
" ---------------------------------------------------------------------------
" airline configuration
let g:PowerLine_symbols = 'unicode'

"let g:airline_theme='powerlineish'
"let g:airline_theme='papercolor'
"let g:airline_theme='luna'
let g:airline_theme='wombat'

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
                                                                              
let g:airline_symbols.linenr = '␤'                                              
"let g:airline_symbols.branch = '⭠'                                              
let g:airline_symbols.paste = 'ρ'                                               
let g:airline_symbols.paste = 'Þ'                                               
let g:airline_symbols.paste = '∥'                                               
let g:airline_symbols.whitespace = 'Ξ'                                          
"let g:airline_symbols.readonly = '⭤'    

let g:airline#extensions#hunks#enabled  = 0
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'

let g:airline_section_a = airline#section#create(['mode'])
"let g:airline_section_a = 'mode'
" let g:airline_section_b =
" let g:airline_section_x = airline#section#create(['%p%%'])
" let g:airline_section_y = airline#section#create(['%B'])
let g:airline_section_z = airline#section#create_right(['%p%%','%l/%L:%c'])
" ---------------------------------------------------------------------------

" ---------------------------------------------------------------------------
" NERDTree options
let g:NERDTreeIgnore = ['\.o$', '\.a$', '\.so$', '\.d$', '\.pyc$', '\.swp$']
" ---------------------------------------------------------------------------

" ---------------------------------------------------------------------------
" Tagbar settings
nmap <F4> :TagbarToggle<CR>
let g:tagbar_sort = 0
" ---------------------------------------------------------------------------

